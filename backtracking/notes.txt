Backtracking is an algorithmic-technique for solving problems recursively by trying to build a solution incrementally, one piece at a time, removing those solutions that fail to satisfy the constraints of the problem at any point of time (by time, here, is referred to the time elapsed till reaching any level of the search tree).

Three types of Backtracking problems
  1. Decision Problem - searching for feasible solution
  2. Optimization Problem - searching for best solution
  3. Enumeration Problem - finding all possible solutions

How to determine if Backtracking is required?
  - Many problems can be solved using greedy methods, dynamic programming.
  - better than Backtracking because of its exponential complexity
